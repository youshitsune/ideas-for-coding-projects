Todo List - It's eodo list;Snake - If you had a cellphone in the early 2000s, you’ve probably played Snake. It’s a simple game but you can always try to make things more complex! First, start by just trying to make the game.;Discord Bot - Try creating discord bot;A simple HTTP Server - During our web development journey, all of us would have used a web server in one way or the other (MAMP, Apache, Node Server etc). But you would get a better understand of how the server works if you implement one on your own. Learn socket programming and try to give it a shot and see if you can serve web pages;Maze Generator - This project is a versatile introductory exercise in goal-setting and problem solving. It’s also open-ended enough that there are lots of ways to go about it. Find a way to randomly generate a maze, and then create an algorithm that will navigate through the maze and successfully reach the maze’s exit. A popular method to accomplish both is the genetic algorithm, a not-quite-brute-force way of training your program to solve problems (which means you’re making AI!). Bob Nystrom has a particularly great guide on generating mazes and dungeons.;An array sorter - Make a program that can take any array and sort it to be in the proper order. You can try different sorting algorithms and use statistics libraries like matplotlib for python to visualize the sorting.;Audio Visualizer - Trippy graphics reacting to music;Chat App - A Realtime chat app where you can chat without a login;A simple terminal app for reddit - While using reddit on the website/app is nice, sometimes it would be great to have it on the terminal removing all of the additional clutter like ads etc. The terminal app should allow a user to browse various subreddits and view comments and post comments and so on (but the sky's the limit).;Personal Website - Make a website for yourself.;A programming language - Make a parser for simple expressions like CallFunction(Argument1, Argument2), variables, maybe some loops, return statements and more.;Virtual Pet Simulator - For those who are missing the cute factor in their work, a virtual pet simulator is a fun standard project. First pick a type of creature like an animal or some type of monster to design, but beginners can start with a basic circle to represent the pet. Once you’ve chosen your concept, give your pet a name, age, and other properties like health and happiness. You might also want to keep in mind physics concepts like movement, gravity, and inertia. Depending on your experience and whether you’re opting for a 2D or 3D model, your pet and its background can come many different ways. You can also customize features on your pet, like programming specific responses to stimuli. This is a great project because you can continuously revisit and improve as you develop your skills.;Tetris - Create a Tetris game! Sure, it has been done a million times, but it's really interesting to try to make it!;Recipe - You might not have realized this, but recipe’s are nothing more than culinary algorithms. Like programs, recipe’s are a series of imperative steps which, if followed correctly, result in a tasty dish. The objective of the Recipe app is to help the user manage recipes in a way that will make them easy to follow.; Contact Book - Create a contact book project. Data has to be saved in a database.; A 2D Platformer - Make a player that falls to the ground and collides with it. Make him be able to jump and walk left and right.; Virus simulator - Build a model of a population being exposed to a virus.; A grid-based fluid/sand simulation - Each particle falls to the ground if nothing is beneath it, but fluids flow to the closest hole.; Pseudo Currency - Create your own bank! Allow people to create/be assigned accounts, transfer money, view their/others transactions with different filters, view their balance over time, etc. Interfacing with this system could be via a website, a programmatic API, a chat bot (Discord, Slack, Telegram), or a few or all of these things! The system for the creation of money can be as simple as a daily allowance, or some other thing you can come up with yourself!; Advent of code event. - Do some advent of codes from past years, good practice for any language you wish, and fun. https://adventofcode.com/; Conway's GameOfLife -  It is a cellular automaton devised by the British mathematician John Horton Conway in 1970. It is a zero player game, meaning that its evolution is determined by its initial state, requiring no further input. You just have to observe how it evolves. How it works : Every cell, which are placed on a grid, interacts with its eight neighbours, which are the cells that are horizontally, vertically, or diagonally adjacent. At each step in time, the following transitions occur:  Any live cell with fewer than two live neighbours dies, as if by underpopulation.  Any live cell with two or three live neighbours lives on to the next generation.  Any live cell with more than three live neighbours dies, as if by overpopulation.  Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.
